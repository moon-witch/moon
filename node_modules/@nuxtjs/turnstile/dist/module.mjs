import fs from 'node:fs';
import { fileURLToPath } from 'node:url';
import { defineNuxtModule, useLogger, addPlugin, addComponentsDir, addServerHandler } from '@nuxt/kit';
import { resolve, join } from 'pathe';
import { defu } from 'defu';

const module = defineNuxtModule({
  meta: {
    configKey: "turnstile",
    name: "@nuxtjs/turnstile"
  },
  defaults: (nuxt) => ({
    secretKey: nuxt.options.dev ? "1x0000000000000000000000000000000AA" : void 0,
    siteKey: nuxt.options.dev ? "1x00000000000000000000AA" : void 0,
    addValidateEndpoint: false
  }),
  setup(options, nuxt) {
    const logger = useLogger("turnstile");
    const siteKey = options.siteKey || nuxt.options.runtimeConfig.public?.turnstile?.siteKey;
    if (!siteKey) {
      logger.warn(
        "No site key was provided. Make sure you pass one at runtime by setting NUXT_PUBLIC_TURNSTILE_SITE_KEY."
      );
    }
    if (options.secretKeyPath) {
      try {
        options.secretKey = fs.readFileSync(
          resolve(nuxt.options.rootDir, options.secretKeyPath),
          "utf-8"
        );
      } catch {
      }
      if (!options.secretKey) {
        logger.warn(`No secret key present in \`${options.secretKeyPath}\`.`);
      }
    }
    const runtimeDir = fileURLToPath(new URL("./runtime", import.meta.url));
    nuxt.options.build.transpile.push(runtimeDir);
    nuxt.options.runtimeConfig = defu(nuxt.options.runtimeConfig, {
      turnstile: {
        secretKey: options.secretKey
      },
      public: {
        turnstile: {
          siteKey
        }
      }
    });
    addPlugin({ src: join(runtimeDir, "plugins/script") });
    addComponentsDir({ path: join(runtimeDir, "components") });
    if (options.addValidateEndpoint) {
      addServerHandler({
        route: "/_turnstile/validate",
        handler: join(runtimeDir, "nitro/validate.post")
      });
    }
    nuxt.hook("nitro:config", (config) => {
      config.externals = defu(config.externals, {
        inline: [runtimeDir]
      });
      config.imports = defu(config.imports, {
        presets: [
          {
            from: join(runtimeDir, "nitro/utils/verify"),
            imports: ["verifyTurnstileToken"]
          }
        ]
      });
    });
  }
});

export { module as default };
